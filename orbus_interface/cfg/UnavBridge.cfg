#!/usr/bin/env python
PACKAGE = "orbus_interface"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# Bridge
enable = gen.enum([ gen.const("Low",  int_t, 0, "Enable normally low"),
                    gen.const("High", int_t, 1, "Enable normally high")],
                    "Logic state")
gen.add("h_bridge_enable", int_t, 0, "Default logic value to enable the H bridge", 0, 0, 1, edit_method=enable)

gen.add("PWM_dead_zone",  double_t, 0, "[mS] Dead Zone PWM",                    0,  0)
gen.add("PWM_frequency",     int_t,    0, "[Hz] frequency of execution PWM",       0,   1, 100)

gen.add("volt_offset", double_t, 0, "[V] Voltage sense offset", 1,  0)
gen.add("volt_gain", double_t, 0, "[V/V] Gain Voltage", 1,  0)

gen.add("current_offset", double_t, 0, "[V] Current sense offset in volt", 0,  0)
gen.add("current_gain", double_t, 0, "[V/A] Current sense gain in Volt Ampere", 1,  0)

#Default command
gen.add("Store_in_EEPROM", bool_t  , 0, "Store this data in uNav EEPROM", False)
gen.add("restore_defaults", bool_t  , 0, "Restore to the original configuration", False)

exit(gen.generate(PACKAGE, "unav_node", "UnavBridge"))
